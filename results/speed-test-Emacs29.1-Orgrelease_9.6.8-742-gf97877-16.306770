
[profiler-profile "28.1" cpu #s(hash-table size 730 test equal rehash-size 1.5 rehash-threshold 0.8125 data ([macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 14 [and not and or org-back-to-heading save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion] 100 [let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region if] 539 [redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if] 2438 [cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let] 3 [assq cdr member if save-current-buffer if prog1 let let* if org-fold-core--property-symbol-get-create list remove-text-properties progn if if] 4 [redisplay--update-region-highlight run-hook-with-args redisplay--pre-redisplay-functions redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if] 4 [cond org-element-type let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 4 [if org-fold-core--property-symbol-get-create list remove-text-properties progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if] 16 [window-edges image-next-line image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if] 24 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function] 15 [save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 8 [1- if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let] 11 [mapc cond let "#<lambda -0x10884b221b74d32e>" funcall catch let let* progn if org-element-ast-map let* progn if org-element-map let*] 4 [cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 4 [save-current-buffer org-element--cache-active-p and if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe while save-excursion] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form] 10 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 15 [cconv-make-interpreted-closure function org-element-lineage-map if or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility] 52 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 15 [if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if outline-flag-region@fix-for-org-fold apply outline-flag-region outline-flag-subtree outline-hide-subtree] 103 [prog1 catch let progn if cond let "#<lambda -0x10884b221b74d32e>" mapc cond let "#<lambda -0x10884b221b74d32e>" funcall catch let let*] 4 [if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc1d403ed7ebc>" funcall prog1 catch let progn] 7 [save-excursion org-outline-level funcall setq while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility] 4 [get-buffer-window or progn progn if let org-noter--get-doc-window if let org-noter--doc-approx-location let progn progn if let org-noter-sync-next-page-or-chapter] 5 [if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if] 41 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc19933ed7ebc>" funcall prog1 catch let progn if cond] 4 [if save-restriction save-excursion org-outline-level funcall setq while let* save-excursion if org-fold-show-children progn if while save-excursion progn] 32 [let cond let cond let "#<lambda 0x1b8fc19223ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc] 2 [save-restriction save-excursion org-outline-level funcall setq while let* save-excursion if org-fold-show-children progn if while save-excursion progn if] 36 [cond org-element-contents mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>"] 2 [if not and while let org-element-lineage let if let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility] 4 [while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 60 [if let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc1975bed7ebc>" funcall prog1 catch] 7 [let progn progn if let org-noter-sync-next-page-or-chapter let while let dotimes let while let dotimes let measure-time] 2 [org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn] 12 [function setq let let* progn if org-element-ast-map let* progn if org-element-map let* progn if org-noter--get-properties-end if] 4 [or if let org-noter--parse-location-property let "#<lambda 0x1b8fc14f0bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc] 7 [pdf-view-display-image pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn] 1155 [save-current-buffer org-element--cache-active-p and if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if] 4 [pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc164e3ed7ebc>" funcall prog1 catch] 4 [if cond let "#<lambda 0x10188119f668adbe>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond] 2 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* progn if org-element-ast-map let* progn] 4 [let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if] 40 [font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156e83fb4b09c743>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn progn unwind-protect save-current-buffer let if] 12 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* progn if org-element-ast-map let* progn if] 2 ["#<compiled 0x1e176a9f7e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c37e5a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 2 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure] 16 [org-element-type let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let*] 4 [progn if org-fold-core-get-folding-spec-from-alias let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while] 16 [save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let] 49 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 7 [pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e17592f9e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 42 [cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let] 42 [let* if org-fold-core--property-symbol-get-create list remove-text-properties progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region] 8 [prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let*] 3 ["#<compiled 0x1e17594e1e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c37f263>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 1 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 66 [and save-excursion org-at-heading-p and or org-back-to-heading save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while] 32 [let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>"] 4 [progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let*] 32 [if org-activate-code font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156e8ff387a1a843>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn progn unwind-protect] 4 ["#<lambda 0x10188119f78935be>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 3 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv] 8 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [not cond org-get-limited-outline-regexp let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn] 4 [if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 4 [redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn] 24 [org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-fold-show-children progn if while] 8 [pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c373463>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 10 [and let* vector setq if progn cond let cond let "#<lambda 0x1b8fc1334bed7ebc>" funcall prog1 catch let progn] 4 [pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 12 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 4 [not cond org-element-type let* and let* org-element-begin let* while if let* save-current-buffer org-element--cache-find progn if if] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 8 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 27 [save-current-buffer org-element--cache-active-p and if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion] 8 [cconv-fv cconv-make-interpreted-closure function setq let let* progn if org-element-ast-map let* progn if org-element-map or let* progn] 4 [if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let] 8 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 6 [setq while catch let org-element-lineage-map if or org-back-to-heading let* progn save-excursion if org-fold-show-children cond let* progn] 4 [let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc30863ed7ebc>" funcall prog1 catch let] 4 [if let cond let* and let* vector setq if progn cond let cond let cond let] 8 [org-unfontify-region font-lock-unfontify-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156e8c2593db9143>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn progn unwind-protect save-current-buffer] 4 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101881199ad06dbe>" funcall prog1 catch] 6 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map let] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let*] 4 [org-noter--parse-location-property let "#<lambda 0x1b8fc362dbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>"] 4 [cond let cond let "#<lambda 0x1b8fc362dbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 4 [progn progn let* org-knuth-hash mod if let* save-current-buffer org-element--cache-find and let* save-restriction save-excursion save-current-buffer catch org-element--parse-to] 4 [numberp if cond org-noter--compare-locations and if cond let "#<lambda 0x1018811996435dbe>" funcall prog1 catch let progn if cond] 3 [let "#<lambda 0x1b8fc366e3ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>"] 4 [org-fold-core-folding-spec-p if org-fold-core--check-spec progn if let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn] 8 [if let* if let* let and if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1018811999b865be>" funcall] 3 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc3797bed7ebc>" funcall prog1 catch let progn if cond] 4 [while progn if let* save-excursion progn if org-cycle-show-empty-lines progn progn unwind-protect save-current-buffer let if let progn] 28 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if let] 4 [if or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let*] 4 [progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x101881199be0bdbe>" funcall prog1 catch let progn if cond] 7 [cond let "#<lambda 0x1b8fc35683ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let] 4 [cond let "#<lambda 0x101881199ebc2dbe>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let] 2 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 4 ["#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let* progn if] 3 [org-element-type let* and let* and if let* save-current-buffer org-element--cache-find and let* save-restriction save-excursion save-current-buffer catch org-element--parse-to] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3a0b3ed7ebc>" funcall prog1 catch] 4 [not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function seq-find org-cite-get-processor let org-cite-processor-has-capability-p and or let* org-cite-activate font-lock-fontify-keywords-region font-lock-default-fontify-region] 4 [jit-lock-fontify-now jit-lock-function redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let] 4 [tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 7 [save-current-buffer not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe while] 12 [setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119987b25be>" funcall prog1 catch let progn if cond] 3 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc3a8bbed7ebc>" funcall prog1 catch let progn if cond] 4 [org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 24 [if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let] 8 [unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region if let progn progn if let] 8 [or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119dc7095be>" funcall prog1 catch let progn if] 2 [catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>"] 4 [org-fold-region save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer] 4 [cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc3ed83ed7ebc>" funcall prog1 catch let progn if cond] 4 [if or if while catch let org-element-lineage-map if or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility] 4 [save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 4 [if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119dcb7d5be>" funcall prog1 catch let progn] 2 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function] 4 [if while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 8 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 14 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* progn if org-element-ast-map let*] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 12 [symbolp cond org-element-type memq not and if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3911bed7ebc>" funcall prog1 catch] 4 [org-element--cache-active-p and if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if org-end-of-subtree save-excursion let*] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc39913ed7ebc>" funcall prog1 catch] 4 [org-element--cache-active-p and if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-fold-show-children] 4 [save-current-buffer org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if org-end-of-subtree save-excursion let*] 8 [mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let* progn if org-element-ast-map] 2 [pdf-info-query pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c54ac23>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc38303ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [if if let* progn if org-noter--get-properties-end if let cond let* progn progn unwind-protect save-current-buffer let if] 4 [org-noter--parse-location-property let "#<lambda 0x10188119db6055be>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let] 3 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc38a4bed7ebc>" funcall] 4 [save-current-buffer not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if if] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3977bed7ebc>"] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8e424eebed7ebc>" funcall] 4 [and let* org-element-end or let let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction] 4 [and if cond let "#<lambda 0x10188119d2b045be>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 2 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8e42529bed7ebc>" funcall prog1 catch let progn if cond] 4 [if let org-fontify-meta-lines-and-blocks-1 condition-case org-fontify-meta-lines-and-blocks font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef0a36e8e9643>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let*] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e42568bed7ebc>" funcall prog1] 4 [if org-fontify-drawers font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef0f5dd5dfa43>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn progn unwind-protect] 4 [pdf-view-image-size pdf-misc-size-indication eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if] 9 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x1b8e425a93ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [list remove-text-properties progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading] 12 [unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion] 8 [or if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 2 [cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let* progn if org-element-ast-map let*] 4 [save-current-buffer progn if org-element--cache-sync if if progn if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage] 4 [pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c54b823>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 8 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e4245fbed7ebc>" funcall] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e4245fbed7ebc>" funcall prog1 catch] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 4 [redisplay--pre-redisplay-functions redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn] 4 [if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119df734dbe>" funcall prog1 catch let progn if cond let] 2 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3c6b3ed7ebc>"] 4 ["#<lambda 0x10188119dd3595be>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 2 ["#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall] 9 [let let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction save-excursion save-excursion let if] 8 ["#<lambda 0x1b8fc3cebbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 16 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3d4abed7ebc>" funcall prog1] 4 [org-outline-level funcall setq while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 12 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3d9dbed7ebc>" funcall prog1] 4 ["#<compiled -0x17ea01987ca95ed7>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e17592f9e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 5 [save-current-buffer not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if org-end-of-subtree] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119d1ac7dbe>" funcall prog1 catch let] 6 ["#<lambda 0x1b8fc24733ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc24733ed7ebc>" funcall prog1 catch let progn if cond] 4 [org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry progn] 4 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119d141bdbe>" funcall] 5 [org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc25783ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [if let* if let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc24bf3ed7ebc>" funcall] 4 [let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc24bf3ed7ebc>" funcall prog1 catch let] 4 [progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if let] 14 [let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall] 3 [mapconcat pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c5438a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 1 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 7 [let* and let* let* < if let progn if cond let cond let "#<lambda 0x1b8fc25c63ed7ebc>" funcall prog1] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 10 [org-fontify-meta-lines-and-blocks-1 condition-case org-fontify-meta-lines-and-blocks font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef80c495f4f43>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn progn] 4 [let* org-noter--parse-root org-element-contents let progn progn if let org-noter-sync-next-page-or-chapter let while let dotimes let while let] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2ae6bed7ebc>" funcall prog1 catch] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 12 [and progn or progn buffer-live-p and if progn if org-noter--valid-session if let org-noter--get-doc-window select-window let progn] 3 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 8 [if org-noter--doc-file-property let "#<lambda 0x1b8fc25aa3ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2bedbed7ebc>" funcall] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [let cond let cond let "#<lambda 0x1b8fc2b84bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef27774c5ff43>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if] 8 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc20e43ed7ebc>" funcall] 4 ["#<compiled -0x1c8b5688e856e8df>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e17592f9e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 12 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc21233ed7ebc>" funcall prog1] 4 [let "#<lambda 0x1b8fc21893ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>"] 4 [let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn] 12 [progn if org-element--cache-sync if if progn if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let*] 4 [symbolp cond org-element-type let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 2 [pdf-info-process-assert-running pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c547e23>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 1 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc23e5bed7ebc>" funcall prog1 catch let progn if cond] 4 [org-element-type let* and let* let let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction] 4 [prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let] 4 [save-current-buffer not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min] 8 [org-element-type let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let] 3 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc20553ed7ebc>" funcall prog1 catch] 4 [while catch let org-do-emphasis-faces font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef67735946343>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let* progn] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x10188119d7f4b5be>" funcall prog1 catch let progn if] 3 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc2736bed7ebc>" funcall prog1] 4 [mapconcat pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn] 12 [progn if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc27cb3ed7ebc>" funcall prog1 catch let progn if] 4 [not or and save-excursion org-at-heading-p or progn if outline-back-to-heading@fix-for-org-fold apply outline-back-to-heading outline-flag-subtree outline-hide-subtree if save-excursion if] 4 [setq let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 4 [let "#<lambda 0x1b8fc26c03ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>"] 4 [cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let*] 2 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc267e3ed7ebc>" funcall prog1] 4 [org-element--cache-active-p and if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min] 8 [and if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc21e7bed7ebc>" funcall prog1 catch let progn if] 4 [progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading let* save-excursion] 4 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e75a4dbe>" funcall prog1 catch let progn if] 3 [cond org-element-type let* and let* org-element-begin = and if let* save-current-buffer org-element--cache-find progn if if setq] 4 [org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119e76b9dbe>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 3 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [eq cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let] 4 [org-back-to-heading save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 16 [consp and and let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let] 4 [progn if cond let cond let "#<lambda 0x1b8fc3393bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let*] 4 [save-restriction save-excursion org-outline-level funcall let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 4 [cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc32a63ed7ebc>" funcall prog1 catch] 4 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc32653ed7ebc>" funcall prog1 catch let progn if cond] 4 [org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if save-excursion if progn progn] 4 [if if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe while save-excursion progn if] 4 [if org-noter--get-location-page > or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let] 8 [and progn or progn buffer-live-p and if progn if org-noter--valid-session if let org-noter--get-doc-window if let org-noter--doc-approx-location] 3 [cdr car if let cond let* and let* let* < if let progn if cond let] 8 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function] 2 [org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc2cfbbed7ebc>" funcall prog1 catch let] 4 [let cond let while let let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc2d703ed7ebc>" funcall prog1 catch let progn if cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 10 [and save-excursion org-at-heading-p or progn if outline-back-to-heading@fix-for-org-fold apply outline-back-to-heading outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn] 4 [let* org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn] 4 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e300adbe>" funcall prog1 catch let progn] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2c1d3ed7ebc>" funcall prog1 catch] 4 [save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min if org-end-of-subtree save-excursion let* save-excursion if org-fold-show-children] 4 [cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc2e043ed7ebc>" funcall prog1 catch let progn if] 4 [and or org-back-to-heading save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if] 8 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 10 [cond org-element-type let* and let* < if let progn if cond let cond let "#<lambda 0x1b8fc2e2ebed7ebc>" funcall] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 ["#<lambda 0x1b8fc2fc33ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form] 4 [> and if let org-noter--parse-location-property let "#<lambda 0x1b8fc2fd23ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e2753dbe>" funcall prog1 catch] 2 ["#<lambda 0x1b8fc2ec83ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc2ee2bed7ebc>" funcall prog1 catch let] 4 [derived-mode-p if org-noter--doc-file-property let "#<lambda 0x10188119e2ed05be>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 2 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2945bed7ebc>" funcall] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 6 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc2eb53ed7ebc>" funcall prog1 catch let progn if cond] 4 [let cond let org-cite-processor-has-capability-p and or let* org-cite-activate font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156eaf04541bb643>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc29fc3ed7ebc>"] 4 [and not and or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry progn if while save-excursion progn if org-show-set-visibility] 4 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119edfdcdbe>" funcall prog1 catch let progn if cond] 3 [and let* < if let progn if cond let cond let "#<lambda 0x1b8fc292b3ed7ebc>" funcall prog1 catch let] 4 [save-current-buffer org-element--cache-active-p and if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min if] 4 [let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let* progn] 4 [pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55eba3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 20 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 7 [or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc287a3ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc287a3ed7ebc>" funcall] 4 [mapcar "#<compiled 0xdab03da22ecc529>" mapcar pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e176a9f7e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c55dda3>"] 6 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc280abed7ebc>" funcall prog1 catch let progn if cond] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc28f73ed7ebc>" funcall] 4 [let* if let* < if let progn if cond let cond let "#<lambda 0x1b8fc28f73ed7ebc>" funcall prog1 catch] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* progn if org-element-ast-map let*] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 3 [if let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2b6d3ed7ebc>" funcall prog1 catch] 4 [let* progn if org-element-map or let* progn if org-noter--get-properties-end if let cond let* progn progn unwind-protect] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map] 5 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e43c7ebed7ebc>"] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e43c7ebed7ebc>" funcall prog1 catch] 4 [if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion] 8 [org-noter--get-location-page = and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1018811f8e8085be>" funcall prog1] 2 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 2 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8e43f55bed7ebc>" funcall] 4 [while catch org-activate-links--text-properties if org-activate-links font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ea02674d5d543>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function window-end let cond let*] 4 [let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall catch let let* progn] 2 [car eq if let cond let* and let* vector setq if progn cond let cond let] 4 [funcall setq while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 13 [macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let] 4 [pdf-info-query--escape mapconcat pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55cca3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 6 [if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc2b6d3ed7ebc>" funcall prog1 catch let progn] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let*] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e326ba16>" funcall prog1 catch let] 7 [< if let progn if cond let cond let "#<lambda 0x1b8fc28b4bed7ebc>" funcall prog1 catch let progn if] 4 [intern org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc28f73ed7ebc>" funcall prog1 catch let progn if cond let] 6 [let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc28f73ed7ebc>" funcall prog1 catch let] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc280abed7ebc>" funcall prog1] 4 [org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer let if let progn] 4 [cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall catch let let* progn if org-element-ast-map let*] 2 [and let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let] 8 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc29813ed7ebc>" funcall prog1 catch] 4 [setq progn progn if while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility] 8 ["#<lambda 0x1b8fc29fc3ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc] 4 [- 1- if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2eb53ed7ebc>" funcall] 4 [or if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc] 2 [let "#<lambda 0x1b8fc2e763ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>"] 4 [if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 6 [if let "#<lambda 0x1b8fc2945bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc2ee2bed7ebc>" funcall prog1 catch let progn if cond] 4 [let* progn if org-element-map let progn progn if let progn if org-noter--get-view-info let progn progn if] 3 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc2ec83ed7ebc>" funcall prog1 catch let progn if cond] 4 [function org-element-lineage-map if or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let] 4 [let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119e23f7a16>" funcall prog1 catch let] 3 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2fd23ed7ebc>" funcall prog1] 4 [if let* if let* org-element-begin = and if let* save-current-buffer org-element--cache-find and let* save-restriction save-excursion save-current-buffer] 4 [and if cond let "#<lambda 0x10188119e3b53216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 3 [let* < if let progn if cond let cond let "#<lambda 0x1b8fc2fc33ed7ebc>" funcall prog1 catch let progn] 4 [save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 9 [org-noter--get-notes-window let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let while let dotimes let] 7 [cond let "#<lambda 0x1b8fc2e2ebed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let] 4 [pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 11 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2e043ed7ebc>" funcall] 4 [org-element-type let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119e338ba16>" funcall prog1 catch] 14 [org-fold-region if outline-flag-region@fix-for-org-fold apply outline-flag-region outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x10188119ee0ff216>" funcall prog1 catch let progn if cond] 5 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2dce3ed7ebc>" funcall prog1] 4 [save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if] 4 ["#<lambda 0x10188119ee440216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc] 3 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2d703ed7ebc>" funcall prog1] 4 [and or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119eed9e216>" funcall prog1 catch let] 6 [cdr car if let cond let* and let* vector setq if progn cond let cond let] 4 [org-noter--compare-locations and if cond let "#<lambda 0x10188119ee214a16>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc] 2 [if let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2c86bed7ebc>" funcall prog1 catch] 4 [image-next-line image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if let] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 6 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc32653ed7ebc>" funcall prog1 catch let progn if cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 6 [let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc32a63ed7ebc>" funcall prog1 catch let] 4 [intern org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119e1498216>" funcall prog1 catch let progn if cond let] 4 [and not and or org-back-to-heading save-excursion org-fold-heading let* save-excursion if org-fold-show-children cond let* progn if if] 8 ["#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall] 2 [if let* if let* let* < if let progn if cond let cond let "#<lambda 0x1b8fc3393bed7ebc>" funcall] 4 [or and save-current-buffer org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-fold-show-children] 4 [consp and and let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e757e216>"] 2 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc33a23ed7ebc>"] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 6 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 3 [or if let org-noter--parse-location-property let "#<lambda 0x10188119d6092216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc] 2 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc267e3ed7ebc>"] 4 [remove-text-properties progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while] 4 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119d6300a16>" funcall] 10 [progn if org-fold-core-get-folding-spec-from-alias org-fold-core-folding-spec-p if org-fold-core--check-spec progn if let org-fold-region if save-excursion org-fold-heading while let* save-excursion] 8 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 2 [derived-mode-p if org-noter--doc-file-property let "#<lambda 0x10188119d7e5b216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 2 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc27cb3ed7ebc>"] 4 [progn if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch] 7 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let] 3 [progn if if if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while save-excursion] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc20bcbed7ebc>" funcall] 6 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e1050216>" funcall prog1 catch] 5 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc23e5bed7ebc>" funcall prog1 catch] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if] 4 [let* if let* and if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion] 4 [let "#<lambda 0x10188119e7bfaa16>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>"] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc21893ed7ebc>" funcall prog1 catch] 4 [pdf-history-before-change-page-hook run-hooks pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 4 [let cond let "#<lambda 0x1b8fc20e43ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119e11ea216>" funcall prog1 catch] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2b84bed7ebc>" funcall] 4 [let cond let "#<lambda 0x1b8fc2bedbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119cdf4da16>" funcall prog1 catch let progn if cond] 7 [let* if let* < if let progn if cond let cond let "#<lambda 0x1b8fc25aa3ed7ebc>" funcall prog1 catch] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc2ae6bed7ebc>" funcall] 4 [let cond if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion let if] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 9 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc25053ed7ebc>" funcall prog1 catch let progn if cond] 4 [cond org-element-type let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond let "#<lambda 0x4953dca243dd26e>" funcall catch let] 4 [cond let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 20 [not cond format let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 8 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119d0778216>" funcall prog1 catch let progn if cond] 5 [and if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc24bf3ed7ebc>" funcall prog1 catch let progn if] 4 [org-element-parent setq while let org-element-lineage let* org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [intern org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc25783ed7ebc>" funcall prog1 catch let progn if cond let] 4 [org-element-type let* and let* vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc24733ed7ebc>" funcall] 7 [or set-buffer save-current-buffer not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [kill-this-buffer-enabled-p redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn] 3 [or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119d18d3216>" funcall prog1 catch let progn] 3 [let* if let* < if let progn if cond let cond let "#<lambda 0x1b8fc27943ed7ebc>" funcall prog1 catch] 3 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1b8fc3d9dbed7ebc>" funcall] 6 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map] 2 [if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc3cebbed7ebc>" funcall prog1 catch let progn if cond] 4 [if save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children] 4 [not cond org-get-limited-outline-regexp let* progn save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 4 [if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119dd4f9a16>" funcall prog1 catch let progn if cond let] 2 [let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8e4245fbed7ebc>" funcall prog1 catch let progn if cond] 4 [save-restriction save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn] 4 [save-current-buffer org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if save-excursion if progn] 4 [save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 7 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8e424083ed7ebc>" funcall prog1 catch] 4 [not if progn if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage-map if or org-back-to-heading if] 4 [progn if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8e425a93ed7ebc>" funcall prog1 catch let progn if] 4 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8e42568bed7ebc>" funcall] 6 [let* org-element-begin let* while if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion] 4 [cond let* progn progn if let org-noter--mode-line-text eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn] 3 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 3 [macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let] 9 [if let* if let* let* < if let progn if cond let cond let "#<lambda 0x1b8fc3977bed7ebc>" funcall] 5 [and or progn progn progn let* org-knuth-hash mod if let* save-current-buffer org-element--cache-find progn if if setq] 4 [progn progn if let org-noter--get-notes-window let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let] 2 [cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if let progn if org-noter--get-view-info let progn progn if] 8 [org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let*] 4 ["#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc39bbbed7ebc>" funcall prog1 catch] 2 [unwind-protect save-current-buffer let progn if org-noter--set-notes-scroll redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 12 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3911bed7ebc>" funcall prog1] 8 [let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc39c6bed7ebc>" funcall prog1 catch] 4 [if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall catch let] 2 [tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c5486a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3e8fbed7ebc>" funcall prog1 catch] 4 [if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 4 [derived-mode-p if org-noter--doc-file-property let "#<lambda 0x1b8fc3e8fbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 4 [eq and if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc3e4cbed7ebc>" funcall prog1 catch let progn] 6 [let org-element--cache-verify-element and if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if org-end-of-subtree save-excursion] 4 [or let let* if org-fold-core--property-symbol-get-create list remove-text-properties progn if if if save-restriction save-excursion progn unwind-protect let*] 4 [or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x10188119da9ab216>" funcall prog1 catch let progn if] 5 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x10188119985d1a16>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>"] 6 [org-element--cache-active-p if let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage let* org-up-heading-safe while save-excursion progn if] 8 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x101881199e866216>" funcall prog1 catch let progn if] 2 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101881199ef14a16>" funcall prog1 catch let progn if cond] 6 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc3a0b3ed7ebc>" funcall prog1] 3 [cond let "#<lambda 0x4953dca243dd26e>" funcall catch let let* progn if org-element-ast-map let* progn if org-element-map let progn] 6 [org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc3adc3ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 4 [and save-excursion org-at-heading-p and if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect] 4 [run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101881199eb42216>" funcall prog1 catch let progn] 8 [cconv--analyze-function cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv] 2 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-lineage-map if or org-back-to-heading if org-back-to-heading-or-point-min] 4 [cond let cond let "#<lambda 0x1b8fc35683ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond] 6 [save-excursion progn unwind-protect let* let org-fold-region if save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if] 4 [catch org-element--parse-to condition-case if setq let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage setq if org-end-of-subtree] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq] 3 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 3 [let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc3797bed7ebc>" funcall prog1 catch let progn if cond let] 6 [mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall catch] 2 [progn if let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc366e3ed7ebc>" funcall prog1 catch let progn if] 2 [and not and or org-back-to-heading save-excursion org-fold-heading while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 5 [org-fold-show-entry progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [cond let cond org-noter--relative-position-to-view let cond let "#<lambda 0x1b8fc30acbed7ebc>" funcall prog1 catch let progn if cond let] 6 [funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 2 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc30863ed7ebc>" funcall prog1 catch] 3 [org-element-lineage-map if or org-back-to-heading let* progn save-excursion if org-fold-show-children cond let* progn if if org-show-set-visibility save-excursion] 4 [let* progn if org-element-map let let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let] 2 [or progn progn if let org-noter--get-doc-window select-window let progn progn if let org-noter-sync-prev-page-or-chapter let while let] 6 [let save-restriction save-excursion save-excursion let if org-element-at-point org-element-lineage-map if or org-back-to-heading let* progn save-excursion if org-fold-show-children] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc13fa3ed7ebc>" funcall prog1 catch let progn if] 8 [if let org-noter--parse-location-property let "#<lambda 0x1018811992f54216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 3 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn] 3 [org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 9 ["#<lambda -0x10884b221b74d32e>" mapc cond let "#<lambda -0x10884b221b74d32e>" funcall catch let let* progn if org-element-ast-map let* progn if org-element-map] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function] 6 [and not and or org-back-to-heading if org-back-to-heading-or-point-min if org-end-of-subtree save-excursion let* save-excursion if org-fold-show-children cond let*] 4 [eq cond org-noter--relative-position-to-view let cond let "#<lambda 0x1b8fc15f63ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 8 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1b8fc1562bed7ebc>" funcall] 3 [let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let] 4 [if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x10188119f709e216>" funcall prog1 catch let progn] 2 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let "#<lambda 0x1b8fc14e93ed7ebc>" funcall prog1 catch let] 3 [cond let cond let cond let "#<lambda 0x1b8fc1428bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 3 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 3 [or if unwind-protect let* let org-fold-region if outline-flag-region@fix-for-org-fold apply outline-flag-region outline-flag-subtree outline-hide-subtree if save-excursion if progn] 4 [cond cond let "#<lambda 0xf6173c4ce4dcd5>" funcall catch let let* progn if org-element-ast-map let* progn if org-element-map or] 4 [let* and if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction save-excursion save-excursion let if] 4 [if org-noter--get-location-page < or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119f8ec0216>" funcall prog1] 6 [let "#<lambda 0x1b8fc14f0bed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>" mapc cond cond let "#<lambda 0x4953dca243dd26e>"] 4 [save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn] 6 [and if let save-restriction save-excursion save-excursion let if org-element-at-point let org-before-first-heading-p if org-back-to-heading-or-point-min save-excursion org-fold-show-entry progn] 4 [if let progn progn if let org-noter--doc-location-change-handler run-hooks pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn] 9 [org-noter--get-location-page < or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119fd582a16>" funcall prog1 catch] 3 [if let cond let* and let* goto-char save-excursion org-noter--show-note-entry let while let cond let* progn progn] 4 [cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let "#<lambda 0xc4a973ab43dd26e>" funcall catch let] 3 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc19223ed7ebc>" funcall] 3 [pdf-info-query--parse-response "#<compiled 0x1e17592f9e92afa3>" tq-process-buffer tq-filter "#<compiled -0x72baef33f0e47bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let] 6 [let cond org-noter--relative-position-to-view let cond let "#<lambda 0x1b8fc1d403ed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 2 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x10188119f4c6b216>" funcall prog1 catch let progn] 2 [cond org-element-type let* and let* and if let* save-current-buffer org-element--cache-find progn if if setq let save-restriction] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq] 4 [if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc1bffbed7ebc>" funcall prog1 catch let progn] 4 [if let* save-current-buffer org-element--cache-find and let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let save-restriction] 4 [let* and and let* let let org-element--property org-element-parent if let org-element-lineage let* org-up-heading-safe while save-excursion progn] 4 [let or progn if let org-noter--parse-location-property let "#<lambda 0x1018811995f3a216>" funcall prog1 catch let progn if cond let] 3 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let] 4 [if eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let] 8 [or let cond let* if let* let let org-element--property or if let org-noter--parse-location-property let "#<lambda 0x1b8fc1b4ebed7ebc>" funcall] 7 [derived-mode-p if org-noter--doc-file-property let "#<lambda 0x1018811993791216>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x1b8fc236dbed7ebc>" funcall prog1 catch let progn if cond let "#<lambda 0x4953dca243dd26e>"] 5 [or org-back-to-heading save-excursion org-fold-heading while let* save-excursion if org-fold-show-children progn if while save-excursion progn if org-show-set-visibility] 4 [prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond let] 2 [cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-lineage-map if or org-back-to-heading if org-back-to-heading-or-point-min save-excursion org-fold-show-entry if] 6 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* progn if] 4 [if let org-noter--parse-location-property let "#<lambda 0x10188119fa502a16>" funcall prog1 catch let progn if cond let "#<lambda 0xc4a973ab43dd26e>" mapc cond] 3 [and let* org-element-end let while let let* save-restriction save-excursion save-current-buffer catch org-element--parse-to condition-case if setq let] 4 [let* save-excursion if org-fold-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond] 4 [Automatic\ GC] 1140)) (25847 63903 635114 544000) nil]
