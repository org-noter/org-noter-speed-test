
[profiler-profile "28.1" cpu #s(hash-table size 487 test equal rehash-size 1.5 rehash-threshold 0.8125 data ([1- if list nconc list let let* save-excursion org-element-headline-parser cond let save-excursion org-element--current-element let* if while] 1 [replace-regexp-in-string org-trim let* save-excursion org-element-headline-parser cond let save-excursion org-element--current-element let* if while let save-excursion org-element--parse-elements cond] 4 [not cond org-get-limited-outline-regexp let* progn cond let save-excursion org-element--current-element let* if while let save-excursion org-element--parse-elements cond] 4 [pdf-view-display-image pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn] 1399 [save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 15 [and let cond let org-end-of-subtree save-excursion let* save-excursion if org-show-children progn if while save-excursion progn if] 40 [redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if] 2013 [progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if let] 36 [pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e3d792596889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 21 [outline-back-to-heading condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 39 [org-flag-region let* if let* cond let org--hide-wrapper-toggle org-hide-drawer-toggle progn if let "#<lambda 0x13e3eb0>" funcall if let* if] 8 [let "#<lambda 0x166e2bd303cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond] 4 [cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let let*] 4 [while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 76 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e2a0e6bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [mapconcat pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c369a63>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 5 [let "#<lambda 0x166e2a0d23cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let] 72 [while progn if let* save-excursion progn if org-cycle-show-empty-lines progn progn unwind-protect save-current-buffer let if let progn] 36 [pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 29 [save-excursion let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 60 [org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 15 [let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region if] 480 [progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 67 [or cdr let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion] 99 [not or cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 226 [outline-flag-region outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 16 [mapconcat pdf-info-query pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c3697e3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 5 [cond let cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e2a3fbbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [or and cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2a2a0bcddd64>" funcall let progn] 4 [window-edges image-next-line image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if] 39 [condition-case org-back-to-heading save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility] 36 [if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 38 [save-excursion org-outline-level funcall let org-end-of-subtree save-excursion let* save-excursion if org-show-children progn if while save-excursion progn if] 4 [cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let] 43 [pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c3701a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 6 [let "#<lambda 0x166e2abf6bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [funcall 1- let progn if org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let] 4 [user-error condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 430 [org-flag-region if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility] 80 [redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn] 22 ["#<compiled 0xeffbee66b2cc529>" mapcar pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e39ce0f66889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c371223>" mapcar] 8 [unwind-protect let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch] 42 [cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let] 38 [let cond let "#<lambda 0x166e2a4893cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 ["#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c3779a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 3 [cond org-element-type let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let] 4 [outline-back-to-heading condition-case org-back-to-heading-or-point-min cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 28 [cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>" funcall catch let let*] 2 [mapcar "#<compiled 0xeffbee66b2cc529>" mapcar pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e39ce0f66889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c375ea3>"] 2 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2aa2abcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [and cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491dcf2908e>" funcall let progn if] 2 [pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 4 [let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 41 [member-ignore-case cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2aed1bcddd64>" funcall let progn if] 4 [mapconcat pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn] 7 ["#<subr F616e6f6e796d6f75732d6c616d626461_anonymous_lambda_2>" internal--before-save-selected-window pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 5 [derived-mode-p not cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while] 12 [not cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch] 7 [not cond org-element-type let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 56 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2aec5bcddd64>" funcall let] 4 [condition-case org-back-to-heading-or-point-min cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 66 [cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction] 74 [pdf-info--normalize-file-or-buffer pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c37f263>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 2 [save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 32 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2adce3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [org-noter--parse-location-property let "#<lambda 0x166e2ac3f3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2ac3f3cddd64>" funcall let progn if cond] 4 [cond let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2b4143cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2acaebcddd64>" funcall let progn if cond] 4 [let cond let "#<lambda 0x166e2acaebcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 [progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 19 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2ac5bbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [org-element-property or if let org-noter--parse-location-property let "#<lambda 0x166e26c113cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [progn unwind-protect let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while] 44 [cond let save-restriction save-excursion org-element-at-point let "#<lambda 0x13e3eb0>" funcall if let* if let* while save-excursion let* progn] 4 [pdf-info--normalize-file-or-buffer pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 6 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2a923bcddd64>" funcall let progn if cond] 4 [let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion] 18 [org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 12 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map let*] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491e60b308e>" funcall let progn if cond] 19 [if org-element-property vector setq if progn cond let cond let cond let "#<lambda 0x166e2aa693cddd64>" funcall let progn] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2aa693cddd64>" funcall let progn if] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let] 8 [if eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let] 9 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2a8703cddd64>" funcall let progn] 4 [cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let] 7 [let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or] 10 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2a80abcddd64>" funcall let] 4 [intern org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e2a9063cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491fc76708e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond] 2 [pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 14 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e273a6bcddd64>" funcall let progn] 4 [org-noter--parse-location-property let "#<lambda 0x166e273a6bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27093bcddd64>" funcall let] 4 [remove-overlays org-flag-region if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if] 20 [progn or let* progn progn if let org-noter--mode-line-text eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let] 2 [symbolp cond org-element-type let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch] 4 [org-noter--doc-file-property let "#<lambda 0x166e27ce7bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 7 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 5 ["#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let let* org-element-map let] 4 [let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property] 23 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27189bcddd64>" funcall let progn if cond] 4 [null save-excursion let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 34 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 8 [pdf-view-image-size pdf-misc-size-indication eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if] 4 [while catch org-activate-links font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ef3b94c9cd943>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b8491e104c88e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond] 6 [progn if cond let cond let "#<lambda 0x166e270fd3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e2713a3cddd64>"] 4 [pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 15 [cond org-element-contents mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>"] 4 [cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>" funcall catch let let* org-element-map let let progn] 2 [and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 4 [outline-back-to-heading outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 4 [condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction] 28 [let cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e277783cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure] 4 [window-edges window-inside-pixel-edges pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e277be3cddd64>" funcall let progn if] 4 [if cond org-noter--compare-locations and if cond let "#<lambda 0x101b84907004a88e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc] 3 [let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 19 [cancel-timer progn if progn if if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 4 [cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2762bbcddd64>" funcall let progn if cond] 4 [not cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch] 8 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e275f0bcddd64>"] 4 [if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if] 48 [if org-noter-pdf--get-current-view run-hook-with-args-until-success or progn unwind-protect save-current-buffer let let progn progn if let org-noter--get-current-view org-noter--get-view-info let] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while let cond] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e265fc3cddd64>" funcall let progn if cond] 4 [save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 12 [let cond let "#<lambda 0x166e265c53cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 [let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let let* org-element-map] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e26433bcddd64>" funcall let progn] 6 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e267e8bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>" funcall catch let let* org-element-map let let] 4 ["#<compiled -0x17ea01d12a339fd7>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e3d792596889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 7 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8490136f008e>" funcall let progn if] 7 ["#<compiled 0x1aafeaa33c54cda3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 3 [vector setq if progn cond let cond let cond let "#<lambda 0x166e2665a3cddd64>" funcall let progn if cond] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map or let* progn if org-noter--get-properties-end if let cond] 4 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b849017f5588e>" funcall let progn] 4 [progn cond let cond let cond let "#<lambda 0x166e261203cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [org-noter--get-location-page = and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491e824a08e>" funcall let] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e260efbcddd64>" funcall let progn] 4 [and let progn if org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond] 28 [let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>" funcall catch let let* org-element-map] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2607cbcddd64>" funcall] 4 [let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or] 16 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e26361bcddd64>" funcall let] 4 [org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 6 [pdf-info-query pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c543523>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 6 [progn cond let cond let cond let "#<lambda 0x166e26038bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e261f5bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e261f5bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [cond org-element-contents not cond cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>"] 2 [image-mode-window-get or let* org-noter--doc-get-page-slice let* org-noter--conv-page-percentage-scroll - image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 4 [org-element-contents mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e262013cddd64>" funcall] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e262013cddd64>" funcall let progn if cond] 4 [outline-back-to-heading condition-case org-back-to-heading save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if] 12 [or if let org-noter--parse-location-property let "#<lambda 0x166e27e2cbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27fb1bcddd64>" funcall] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 8 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27ed3bcddd64>" funcall let progn if cond let] 4 [and let cond let org-end-of-subtree save-excursion let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [- 1- if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer] 4 [org-noter--doc-file-property let "#<lambda 0x101b8491ebb9588e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc] 2 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491eb4e888e>" funcall let progn if cond let] 2 [not cond org-get-limited-outline-regexp let* progn org-before-first-heading-p if save-excursion if progn progn unwind-protect save-current-buffer let if let] 4 [pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e39ce0816889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e278a7bcddd64>" funcall let progn if cond] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b84907382288e>" funcall let progn if] 18 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27d5f3cddd64>"] 4 ["#<compiled 0x1e39c23ac6889823>" tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c546463>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 2 [vector setq if progn cond let cond let cond let "#<lambda 0x166e27d49bcddd64>" funcall let progn if cond] 4 [< if let progn if cond let cond let "#<lambda 0x166e27d49bcddd64>" funcall let progn if cond let] 4 [not cond org-get-limited-outline-regexp let* progn save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27dcebcddd64>" funcall let progn if] 4 [org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn] 8 ["#<lambda 0x166e27220bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 4 [org-noter--doc-file-property let "#<lambda 0x166e27220bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [char-after eq and cond let save-excursion org-element--current-element setq if while let let* save-restriction save-excursion catch org-element--parse-to] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e27ebabcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27d963cddd64>" funcall let] 4 [progn if org-cycle-hide-drawers save-excursion org-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map let] 4 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e26501bcddd64>" funcall let progn if cond let] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map let let] 2 [run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e26576bcddd64>" funcall let] 4 [and if cond let "#<lambda 0x101b84907da2b88e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let] 2 [macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e265423cddd64>"] 4 [mapconcat pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c55f963>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 2 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27d02bcddd64>" funcall let progn if cond] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27b37bcddd64>" funcall let progn if] 4 [pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c5592e3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 6 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27bcf3cddd64>" funcall let progn] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let] 8 [timer--activate timer-activate-when-idle run-with-idle-timer vector setq progn if if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 4 [let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let] 2 [or let progn progn if let org-noter--get-notes-window let progn progn if let org-noter-sync-next-page-or-chapter let while let] 4 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b84901abe508e>" funcall let progn if cond] 4 [setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27930bcddd64>" funcall let progn if] 4 [run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27930bcddd64>" funcall let] 4 [if let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 12 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2799fbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [if let org-noter--parse-location-property let "#<lambda 0x101b84901bd2108e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let] 2 [tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c5588a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 2 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e252ccbcddd64>" funcall let progn if cond] 4 [if let org-noter--parse-location-property let "#<lambda 0x101b84901811a88e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let] 6 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 3 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e25386bcddd64>" funcall] 4 [not cond org-element-contents not cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 4 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e250a8bcddd64>" funcall] 4 [let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>"] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e2504b3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [org-element-contents mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond cond let "#<lambda -0x461f4b734932df1>" mapc cond let "#<lambda -0x461f4b734932df1>" funcall] 4 [pdf-info--normalize-file-or-buffer pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c55c563>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 1 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e250883cddd64>" funcall] 4 [> and if let org-noter--parse-location-property let "#<lambda 0x166e250883cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [and if org-cycle-hide-drawers save-excursion org-show-entry progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e250f2bcddd64>" funcall let progn] 4 [setq let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 16 [org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e25147bcddd64>" funcall let progn if] 4 [or let org-noter--doc-file-property let "#<lambda 0x166e25147bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 12 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b849014d7108e>" funcall let] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e25124bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b84901460808e>" funcall let progn if cond let "#<lambda -0x461f4b734932df1>" mapc cond cond] 4 [org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let] 16 [pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55eba3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 11 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2512ebcddd64>" funcall] 4 [pdf-info--normalize-file-or-buffer pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55dda3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 10 [org-element-property or if let org-noter--parse-location-property let "#<lambda 0x166e251dbbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e25e733cddd64>" funcall let progn] 8 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x101b849018efc08e>" funcall let progn if cond let] 4 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e25ebdbcddd64>" funcall let] 4 [catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8490756d208e>"] 4 [org-noter--get-location-page > or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b849074f0a88e>" funcall let progn] 3 [progn or progn let progn progn if let org-noter--get-notes-window let progn progn if let org-noter-sync-next-page-or-chapter let] 4 [save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e254c73cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e254c73cddd64>" funcall let progn] 4 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e254a3bcddd64>" funcall let progn if cond let] 4 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8490768a588e>" funcall let progn if cond let] 6 [pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c551ea3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn] 3 [if org-element-property < if let progn if cond let cond let "#<lambda 0x166e257583cddd64>" funcall let progn if] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b84907464a226>" funcall let progn if] 30 [not cond org-element-type let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc] 4 [let "#<lambda 0x101b849018eed226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 3 [cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8490191f5a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 3 [org-noter--get-location-page > or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e25ebdbcddd64>"] 4 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e25ebdbcddd64>" funcall] 4 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b84901952b226>" funcall] 10 [let cond let "#<lambda 0x166e25e733cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map] 4 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e251dbbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2512ebcddd64>" funcall let] 4 ["#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>" funcall catch let let* org-element-map let let progn progn if let] 3 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8490198d1a26>" funcall let progn if] 23 [org-noter-sync-prev-page-or-chapter let while let dotimes let while let dotimes let measure-time setq let progn eval let*] 3 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b849014b34a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e25124bcddd64>" funcall] 4 [if org-noter--get-location-page > or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let] 4 [while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let] 17 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e250f2bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 [let cond let cond let "#<lambda 0x166e250f2bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [progn cond let cond let cond let "#<lambda 0x166e250883cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [1- if save-restriction save-excursion org-outline-level funcall let org-end-of-subtree save-excursion let* save-excursion if org-show-children cond let* progn] 4 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b84901bef8a26>" funcall let progn if cond let] 10 [let "#<lambda 0x166e2504b3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [if save-excursion org-flag-heading let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [cond org-element-type let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>" funcall catch let] 3 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e250a8bcddd64>" funcall] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x101b84901bf89226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 6 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 4 [progn cond let cond let cond let "#<lambda 0x166e25386bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e25351bcddd64>" funcall] 4 [if org-element-property < if let progn if cond let cond let "#<lambda 0x166e25351bcddd64>" funcall let progn if] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e253173cddd64>" funcall let progn if cond] 4 [funcall redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn] 4 [cond let cond let "#<lambda 0x166e2799fbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27aaabcddd64>" funcall let progn] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function let* while save-excursion let* progn if org-cycle-hide-drawers save-excursion] 4 [pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 4 [let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>" funcall catch let let* org-element-map] 6 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27a643cddd64>" funcall let progn] 4 [if cond let "#<lambda 0x101b84907c7d0226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>"] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27bcf3cddd64>" funcall let progn] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27b37bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b84907d265226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 7 [run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b84907d4d5a26>" funcall let progn if cond] 4 [let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>"] 3 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e27a55bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b84907da90a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 6 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b84907da90a26>" funcall let progn if cond] 22 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e26576bcddd64>"] 4 [cond let org-end-of-subtree save-excursion let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [eq cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b849071093a26>" funcall let progn if cond] 4 [if let org-noter--parse-location-property let "#<lambda 0x166e27ebabcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b849071c7c226>" funcall let progn if cond let] 5 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27220bcddd64>" funcall let] 3 [1- if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let] 4 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8490715d8a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 7 [setq if progn cond let cond let cond let "#<lambda 0x166e27dcebcddd64>" funcall let progn if cond let] 4 [or let org-noter--doc-file-property let "#<lambda 0x101b849072a12a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let] 3 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b849072a12a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27d49bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27d49bcddd64>" funcall let progn if cond] 4 [macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27d5f3cddd64>"] 4 [cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 2 ["#<lambda 0x166e278a7bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 4 [if let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e278993cddd64>"] 4 [if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e278993cddd64>" funcall let progn if cond] 4 [if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e279683cddd64>" funcall let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e279683cddd64>" funcall let progn] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8490734ab226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 3 [let "#<lambda 0x166e27948bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27ed3bcddd64>" funcall let progn if cond] 4 [org-element-property or if let org-noter--parse-location-property let "#<lambda 0x101b8491e996aa26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27fb1bcddd64>" funcall let] 4 [if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27fb1bcddd64>" funcall let progn if cond] 4 [macroexpand-all cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer let] 4 [tq-process-buffer tq-filter "#<compiled -0x713dbaac228eebb>" accept-process-output pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c54e223>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e27e2cbcddd64>" funcall] 4 [not cond org-get-limited-outline-regexp let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn] 4 [macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let let progn progn if let org-noter-sync-prev-page-or-chapter let while] 2 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e262013cddd64>" funcall let progn] 4 [not cond org-element-type let while let let* save-restriction save-excursion catch org-element--parse-to cond let save-restriction save-excursion org-element-at-point] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let let] 2 [let cond let "#<lambda 0x166e262b03cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b8491e8443226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 6 [cond org-element-contents not cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>"] 4 [cond let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 20 [or cond let* org-noter--parse-root org-element-contents let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let] 3 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e26def3cddd64>" funcall let progn if cond] 4 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491eac6ca26>" funcall let progn if] 11 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map] 2 [vector setq if progn cond let cond let cond let "#<lambda 0x166e26062bcddd64>" funcall let progn if cond] 4 [save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e261f5bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 4 ["#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall] 4 [let org-noter--doc-file-property let "#<lambda 0x166e26038bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 4 [and cond let cond let cond let "#<lambda 0x166e26361bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function overlay-put let progn if org-flag-region let* if let* cond] 4 [progn cond let cond let cond let "#<lambda 0x166e2607cbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e261203cddd64>" funcall let] 4 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x101b849012fa5a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc] 2 [save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e2665a3cddd64>"] 4 [or let org-noter--doc-file-property let "#<lambda 0x101b849013dd9226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let] 4 [save-excursion org-show-entry progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let*] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8490134df226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 6 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8490134df226>" funcall let progn] 11 [if let org-noter--doc-approx-location let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let while let] 2 [or let org-noter--doc-file-property let "#<lambda 0x166e267b2bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e267e8bcddd64>"] 2 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x166e267e8bcddd64>"] 4 [and if save-excursion org-cycle-show-empty-lines progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x101b84901a0d0a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 3 [let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>"] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x166e265c53cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 2 [cconv-make-interpreted-closure function let* while save-excursion let* progn if org-cycle-hide-drawers save-excursion org-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e265fc3cddd64>" funcall let] 5 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e274a63cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 5 [and or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8490712a5226>" funcall let progn if] 6 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e275613cddd64>" funcall let] 4 [mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>" funcall catch] 6 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e275f0bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 5 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e2762bbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn] 3 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 1 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let] 3 [and cond let cond let cond let "#<lambda 0x166e2758f3cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e277be3cddd64>" funcall let] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x101b849011fcd226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 2 [org-noter--doc-file-property let "#<lambda 0x166e277c93cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc] 4 [pdf-info-query--escape mapconcat pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map save-excursion org-noter--show-note-entry] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x101b849012a9b226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27758bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 3 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x101b849011542a26>" funcall let progn if cond let] 12 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2725dbcddd64>"] 6 [or if let org-noter--parse-location-property let "#<lambda 0x101b8491e7c87226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 2 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let] 4 [or progn = and or cond let* org-noter--parse-root org-element-contents let progn progn if let org-noter-sync-prev-page-or-chapter let] 2 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27189bcddd64>"] 3 [intern org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e27189bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e27104bcddd64>" funcall let progn if cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function] 2 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e27ce7bcddd64>" funcall] 6 [and let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491ff59ea26>" funcall let] 4 [featurep not or cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 2 [> and if let org-noter--parse-location-property let "#<lambda 0x101b8491ff645a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function overlay-put let progn if org-flag-region let* if let* cond let] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491e40b9a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc] 7 [org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or] 6 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2afcbbcddd64>" funcall let progn if cond] 4 [list setq progn cond let cond let cond let "#<lambda 0x166e2af94bcddd64>" funcall let progn if cond let] 2 [let* progn progn if let progn unwind-protect save-current-buffer let progn if org-noter--set-notes-scroll redisplay_internal\ \(C\ function\) redisplay progn unwind-protect] 3 [mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>" funcall catch let let* org-element-map let let] 3 [setq if progn cond let cond let cond let "#<lambda 0x166e2aa693cddd64>" funcall let progn if cond let] 3 [org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 4 [if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch let] 3 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2aaa2bcddd64>" funcall let] 4 [if org-noter--get-location-page let cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e2ab35bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 6 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491e616a226>" funcall let] 6 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2a923bcddd64>"] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2a9a1bcddd64>" funcall let progn] 7 [not cond org-get-limited-outline-regexp let* progn cond let save-restriction save-excursion org-element-at-point let "#<lambda 0x13e3eb0>" funcall if let* if] 8 [member-ignore-case cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491d0a33a26>" funcall let progn if] 4 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function let* while save-excursion let* progn if org-cycle-hide-drawers] 4 [cconv-make-interpreted-closure function setq let let* org-element-map let progn progn if let progn if org-noter--get-view-info let progn] 3 [org-element-property or if let org-noter--parse-location-property let "#<lambda 0x101b8491d3851a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [cond org-element-contents not cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let "#<lambda 0x1122ebae0f72110f>"] 6 [pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 3 [if let org-noter--parse-location-property let "#<lambda 0x166e2ad72bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [save-excursion org-entry-end-position cond let* progn if org-cycle-hide-drawers save-excursion org-show-entry progn if while save-excursion progn if org-show-set-visibility] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491ddb6fa26>" funcall let progn] 3 [let cond let "#<lambda 0x166e2ad853cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 3 [or let org-noter--doc-file-property let "#<lambda 0x101b8491dc097226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let] 6 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2a61fbcddd64>" funcall let progn if] 2 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x166e2a6a33cddd64>" funcall] 4 [and cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let "#<lambda -0x461f4d3f08deef1>" funcall catch] 6 [pdf-history-before-change-page-hook run-hooks pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 4 [org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 3 [cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if let progn if org-noter--get-view-info] 4 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e2a4383cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 3 ["#<lambda 0x13e3eb0>" funcall if let* if let* while save-excursion let* progn if org-cycle-hide-drawers save-excursion org-show-entry progn if] 4 [intern org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b8491dabdb226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 4 [cdr let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 2 ["#<lambda 0x166e2abf6bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 3 [let cond let cond let "#<lambda 0x166e2abf6bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond] 4 [intern org-element-property or if let org-noter--parse-location-property let "#<lambda 0x101b8491da749a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc] 2 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x166e2ab81bcddd64>" funcall let] 3 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b849181913a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond] 6 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 3 ["#<lambda 0x166e2a11dbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond let] 4 [cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while let cond let* progn] 4 [cond let cond let "#<lambda 0x166e2a2a0bcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 4 [cond let or progn if let org-noter--parse-location-property let "#<lambda 0x101b84918011fa26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>"] 3 [org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer] 4 ["#<lambda 0x101b8491b8394a26>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond cond let "#<lambda 0x1122ebae0f72110f>" mapc cond let] 2 [org-noter--get-location-page = and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x101b8491b8394a26>" funcall let] 4 [if org-noter--get-location-page let cond org-noter--relative-position-to-view let cond let "#<lambda 0x166e2a0d23cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>"] 3 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x101b8491ba70c226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc] 4 [eq and if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let "#<lambda -0x461f4d3f08deef1>"] 3 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x101b8491ba260226>" funcall let progn if cond let "#<lambda 0x1122ebae0f72110f>" mapc cond] 6 [or let org-noter--doc-file-property let "#<lambda 0x166e2a0773cddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond cond let] 6 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x166e2bd6dbcddd64>" funcall let progn if cond let "#<lambda -0x461f4d3f08deef1>" mapc cond] 5 [cdr setq cond while let progn let* make-org-noter--view-info let progn progn if let progn if org-noter--get-view-info] 4 [let progn eval let* org-babel-execute:elisp funcall let setq if let* cond let* progn if let* org-babel-execute-src-block] 2 [Automatic\ GC] 1138)) (25844 3671 363373 434000) nil]
