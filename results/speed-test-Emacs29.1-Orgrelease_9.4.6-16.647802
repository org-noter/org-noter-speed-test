
[profiler-profile "28.1" cpu #s(hash-table size 730 test equal rehash-size 1.5 rehash-threshold 0.8125 data ([pdf-view-display-image pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn] 1276 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 8 [cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction] 56 [macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all] 6 [redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if] 1555 [or cdr let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion] 75 [let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 48 [save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 46 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 4 [not or cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 280 [cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map save-excursion org-noter--show-note-entry let while let cond] 4 [cond org-element-contents not cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>"] 4 [member-ignore-case cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902c7dc04f2f2c>" funcall let progn if] 4 [outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 52 [let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region if] 224 [let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let let* org-element-map] 4 [user-error condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 416 [let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property] 19 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a902dfa704f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902c61b04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c368463>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 3 [let save-excursion org-element-property-drawer-parser cond let save-excursion org-element--current-element setq if while let let* save-restriction save-excursion catch org-element--parse-to] 4 ["#<compiled 0x4adbc7c262625a0>" mapcar pdf-util-scale "#<compiled -0x19f1351dc3aee81>" mapcar pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c3693a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 2 [outline-back-to-heading condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 38 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [save-excursion org-entry-end-position cond let* progn if org-cycle-hide-drawers save-excursion org-show-entry progn if while save-excursion progn if org-show-set-visibility] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let progn] 4 [save-excursion let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 59 [org-flag-region if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility] 160 [org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a902df4304f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [while progn if let* save-excursion progn if org-cycle-show-empty-lines progn progn unwind-protect save-current-buffer let if let progn] 44 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902d85284f2f2c>" funcall let progn if cond] 4 [org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion] 14 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let*] 8 [pdf-info--normalize-file-or-buffer pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 2 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 4 [save-excursion org-flag-heading let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 4 [progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 59 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function let* while save-excursion let* progn if] 4 ["#<compiled -0x1c8b5199f59f3edf>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e0cfafdc724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 8 [progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch] 4 [progn unwind-protect let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while] 39 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba51df12e>" funcall let progn if cond] 15 [let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion] 18 [if save-excursion org-flag-region save-excursion org-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn] 8 [cond let "#<lambda 0x1016a00ba49cd12e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc] 2 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902d94004f2f2c>" funcall let progn if cond let] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902df1b84f2f2c>" funcall let progn if cond] 4 [condition-case org-back-to-heading-or-point-min cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 43 [setq let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 16 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map let let] 2 [progn buffer-live-p and if progn if org-noter--valid-session if let org-noter--get-notes-window let progn progn if let org-noter--focus-notes-region] 4 [cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 2 [org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn] 8 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00bae67492e>" funcall let progn if cond let] 2 [setcar if org-element-put-property if while let let* save-restriction save-excursion catch org-element--parse-to cond let save-restriction save-excursion org-element-at-point] 4 [pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 4 [outline-back-to-heading condition-case org-back-to-heading-or-point-min cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 26 [cond let save-restriction save-excursion org-element-at-point let "#<lambda 0x13e3eb0>" funcall if let* if let* while save-excursion let* progn] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00ba2aa692e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 3 [condition-case org-back-to-heading save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility] 32 [redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn] 27 [while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 92 [pdf-cache--data-get pdf-cache-number-of-pages number-to-string progn condition-case ignore-errors or eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn] 4 [mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch] 4 [cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let] 4 [pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c37eaa3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 13 [image-next-line image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if let] 7 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba3ed912e>" funcall] 6 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902d73904f2f2c>" funcall let progn if] 4 [save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn] 4 [if save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902db4f84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [member-ignore-case cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00bae0ee92e>" funcall let progn if] 2 [org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 14 [if let "#<lambda 0x1a902d6d484f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902da6e04f2f2c>" funcall] 4 [let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion] 32 ["#<compiled 0x1aafeaa33c372e23>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 5 [cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let] 41 [macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 2 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902c3f284f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let] 4 [and cond let save-excursion org-element--current-element setq if while let let* save-restriction save-excursion catch org-element--parse-to cond let] 8 [pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect] 33 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond] 12 [if save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if] 8 [macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 3 ["#<lambda 0x1a902c34684f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let] 4 [progn condition-case ignore-errors or eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let] 4 [outline-back-to-heading outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 4 [cond let cond let cond let "#<lambda 0x1a902ce6384f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [cond let* save-restriction save-excursion catch org-element--parse-to cond let save-restriction save-excursion org-element-at-point let "#<lambda 0x13e3eb0>" funcall if let*] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map let] 4 [if let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902ceb604f2f2c>"] 4 [derived-mode-p not cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while] 18 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let progn] 4 [outline-back-to-heading condition-case org-back-to-heading save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if] 28 [if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 33 [progn progn if let org-noter--mode-line-text eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if] 3 [tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 2 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902ccdd04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00b9aac192e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 2 [let "#<lambda 0x1a902cc3b84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [cond let "#<lambda 0x1a902cc3b84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [run-hook-with-args-until-success or progn unwind-protect save-current-buffer let let org-noter--doc-approx-location let progn progn if let org-noter-sync-next-page-or-chapter let while] 3 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function] 4 [unwind-protect let save-excursion org-at-comment-p and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch] 32 [pdf-info-query pdf-info-pagelinks pdf-cache-pagelinks pdf-links-hotspots-function "#<compiled 0x1aafeaa33c379da3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 5 [let cond let cond let "#<lambda 0x1a902c09784f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c0dc84f2f2c>" funcall let progn] 4 [and cond let cond let cond let "#<lambda 0x1a902f8c984f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [let* org-element-map let let progn progn if let org-noter-sync-next-page-or-chapter let while let dotimes let while let] 2 [pdf-info-query--escape mapconcat pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c3788e3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let] 3 [funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>"] 4 [cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 8 [and let progn if org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond] 16 [progn if org-fontify-drawers font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156e8d64bfcc6743>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let] 4 ["#<lambda 0x1016a00b9488c92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let] 6 [let* progn if progn if progn cond let cond let "#<lambda 0x1a902ce0a84f2f2c>" funcall let progn if cond] 4 [progn if org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn] 4 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1016a00b93e7f12e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc] 3 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c1a204f2f2c>" funcall let] 4 [pdf-info-query--parse-response "#<compiled 0x1e0c3b6d8724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let] 7 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 4 [condition-case org-back-to-heading save-excursion org-flag-heading let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902c05e84f2f2c>" funcall let progn if cond let] 4 [pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 6 [condition-case org-back-to-heading progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction] 31 [cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if let progn if org-noter--get-view-info let progn progn if] 8 [pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c578223>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 2 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902fb4504f2f2c>" funcall] 4 [org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction] 6 [< if let progn if cond let cond let "#<lambda 0x1a902f86b04f2f2c>" funcall let progn if cond let] 4 [progn condition-case if org-up-heading-or-point-min cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 15 [or progn if let org-noter--parse-location-property let "#<lambda 0x1a902cbe904f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [consp and and let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let] 4 [cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall catch let let*] 2 [remove-overlays org-flag-region if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if] 20 [org-element-property vector setq if progn cond let cond let cond let "#<lambda 0x1a902fa6184f2f2c>" funcall let progn if] 4 [cond org-element-type let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let] 4 [org-noter--doc-approx-location let progn progn if let org-noter-sync-next-page-or-chapter let while let dotimes let while let dotimes let] 2 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902fbfe04f2f2c>" funcall] 4 [outline-flag-region outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let progn progn if] 8 [pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e0cfafdc724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page] 9 [cond let cond let cond let "#<lambda 0x1a902ca5304f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [progn cond let cond let cond let "#<lambda 0x1a902ca5304f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 1 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902c93c04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902ca2104f2f2c>" funcall let progn if cond] 3 ["#<compiled -0x17ea01ae67fdeed7>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e0cfafdc724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay] 8 [or if let org-noter--parse-location-property let "#<lambda 0x1a902ca3a04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [save-restriction save-excursion org-outline-level outline-end-of-subtree outline-flag-subtree outline-hide-subtree if save-excursion if progn progn unwind-protect save-current-buffer let if let] 36 [while org-font-lock-add-priority-faces font-lock-fontify-keywords-region font-lock-default-fontify-region font-lock-fontify-region "#<compiled -0x156ee8442c26d343>" jit-lock--run-functions jit-lock-fontify-now jit-lock-function redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let] 4 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bdb4de92e>" funcall let progn] 3 [and cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch] 4 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c8a984f2f2c>" funcall let progn] 4 [save-excursion org-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer let] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c9b384f2f2c>" funcall] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902c8fb04f2f2c>"] 4 [cond let save-excursion org-element--current-element setq if while let let* save-restriction save-excursion catch org-element--parse-to cond let save-restriction] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c86a84f2f2c>" funcall let progn] 4 [org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let] 12 [or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00b9e79012e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 4 [if let org-noter--parse-location-property let "#<lambda 0x1a902f82f04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [and if let org-noter--parse-location-property let "#<lambda 0x1a902f82f04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [setq if while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 8 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902fe1004f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 8 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00b921f612e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 7 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902fe6d04f2f2c>" funcall] 4 [let cond let cond let "#<lambda 0x1a902fe6d04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 23 ["#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let let* org-element-map let] 4 [if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond let*] 4 [org-noter--doc-file-property let "#<lambda 0x1a901daed84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00bd8c1c92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>"] 3 [org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1a901dab284f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [while let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let while let] 4 [macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let let] 2 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1a901d63984f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location] 4 [macroexp--all-forms macroexp--expand-all macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure] 4 [cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901da0684f2f2c>" funcall let progn if] 4 [symbolp cond org-element-contents not cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let] 4 [while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 4 [org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond] 3 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bc3084f2f2c>" funcall let] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bdf27112e>" funcall let progn if] 10 [cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let] 28 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901bc9f84f2f2c>" funcall let progn] 4 [progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bddc6312e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc] 2 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a901bede04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x1a901bfdd84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall catch let let* org-element-map] 6 [or progn if let org-noter--parse-location-property let "#<lambda 0x1a901a7e284f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 ["#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00bde2be92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond] 2 [org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let] 18 [and cond let cond let cond let "#<lambda 0x1a901a61c84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1016a00bde27792e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc] 3 [or if let org-noter--parse-location-property let "#<lambda 0x1a901be8984f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [null save-excursion let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let] 19 [while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let] 4 [let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or] 8 [window-edges image-next-line image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn if] 7 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00bdd91b12e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 3 [pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 4 [org-noter--compare-locations and if cond let "#<lambda 0x1016a00bd1ada92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond] 3 [mapconcat pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c5462a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 2 [let cond let "#<lambda 0x1a901bfa084f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>"] 4 [while let catch or setq cond let* progn progn unwind-protect save-current-buffer let if let progn progn] 4 [eq and cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall] 6 [function setq let let* org-element-map let progn progn if let progn if org-noter--get-view-info let progn progn] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00bd2f3d92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc] 7 [or if let org-noter--parse-location-property let "#<lambda 0x1a901a76f84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901a11184f2f2c>" funcall let progn if cond] 4 [mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let let* org-element-map let progn] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a72b84f2f2c>" funcall] 4 [or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00afe49c92e>" funcall let progn if cond let] 2 [numberp if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901b5d284f2f2c>" funcall let progn if] 4 [save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 30 ["#<compiled 0x1e0c3b6d8724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query pdf-info-pagesize pdf-cache-pagesize pdf-view-desired-image-size pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b55704f2f2c>" funcall let] 4 ["#<lambda 0x1016a00afdd0092e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let] 6 [save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let] 24 [cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 3 [macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b60384f2f2c>"] 4 ["#<lambda 0x1016a00af2daa92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let] 6 [if let org-noter--parse-location-property let "#<lambda 0x1a901b69084f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af196912e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond] 2 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901a52404f2f2c>" funcall let progn if] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a5a904f2f2c>" funcall] 4 [let org-end-of-subtree save-excursion let* save-excursion if org-show-children cond let* progn if if org-show-set-visibility save-excursion org-noter--show-note-entry let] 4 [progn or progn let progn progn if let org-noter--get-notes-window let progn progn if let org-noter-sync-next-page-or-chapter let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a53f04f2f2c>" funcall let progn] 4 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901a53f04f2f2c>" funcall let progn if cond let] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901b4a184f2f2c>" funcall let progn if] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b4a184f2f2c>" funcall let progn if cond] 4 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b4ae84f2f2c>" funcall] 4 [cconv-fv cconv-make-interpreted-closure function org-element-map save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer let] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms] 7 [vector setq if progn cond let cond let cond let "#<lambda 0x1a901b79b84f2f2c>" funcall let progn if cond] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b79b84f2f2c>" funcall let progn if cond] 4 [save-excursion org-cycle-show-empty-lines progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region if let] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a6a884f2f2c>" funcall let progn] 4 [and let cond let org-end-of-subtree save-excursion let* save-excursion if org-show-children progn if while save-excursion progn if] 28 [cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let] 2 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bb3d84f2f2c>" funcall let] 4 [let org-noter--doc-file-property let "#<lambda 0x1016a00af262c92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>"] 2 [let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>"] 4 [outline-back-to-heading condition-case org-back-to-heading save-excursion org-flag-heading while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while let cond] 8 [mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall catch] 3 [pdf-info-query--parse-response "#<compiled 0x1e0cfafdc724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let] 3 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b8f784f2f2c>" funcall let progn] 4 [not cond org-get-limited-outline-regexp let* progn org-before-first-heading-p cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch] 7 [pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 5 ["#<compiled 0x120c0d072d6cc529>" mapcar pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e0c3b751724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query pdf-info-getselection pdf-info-textregions pdf-cache-textregions pdf-view-text-regions-hotspots-function "#<compiled 0x1aafeaa33c55c3a3>" mapcar] 2 [vector setq if progn cond let cond let cond let "#<lambda 0x1a901ba6984f2f2c>" funcall let progn if cond] 4 [let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let] 4 [tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55c7e3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if] 9 [intern org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a901bbb804f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bbb804f2f2c>" funcall] 4 [org-noter--get-location-page = and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00af506e12e>" funcall let] 2 ["#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall catch let let* org-element-map let] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901ba7504f2f2c>" funcall let progn if cond] 4 [org-element-type let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let] 3 [if progn if org-noter--valid-session if let org-noter--doc-approx-location let progn progn if let org-noter-sync-next-page-or-chapter let while let] 3 [and if cond let "#<lambda 0x1016a00af7dbb92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let] 4 [if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [org-element-contents mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall] 7 [cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond] 4 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b6cf84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [let "#<lambda 0x1016a00af4f0e92e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bb5484f2f2c>" funcall let progn] 4 [let "#<lambda 0x1016a00af384d12e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond] 6 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b75004f2f2c>" funcall] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b75004f2f2c>" funcall let progn if cond] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b73e84f2f2c>"] 4 [macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b73e84f2f2c>"] 4 [cconv-make-interpreted-closure function let* while save-excursion let* progn if org-cycle-hide-drawers save-excursion org-show-entry progn if while save-excursion progn] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af3ce312e>" funcall let progn if cond let "#<lambda 0xe0da7c25520e082>" mapc] 6 [org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 4 [list setq progn cond let cond let cond let "#<lambda 0x1a901b7ee04f2f2c>" funcall let progn if cond let] 4 [save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00aeeae912e>" funcall let] 6 [cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn if let progn if org-noter--get-view-info let] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901afac04f2f2c>" funcall let progn if cond] 4 [if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let] 4 [unless eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let] 4 [let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>"] 2 [progn progn if let org-noter--get-notes-window let progn progn if let org-noter--focus-notes-region if let progn progn if] 4 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901af6504f2f2c>" funcall let progn] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901af6504f2f2c>" funcall let] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901af6504f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901af6504f2f2c>" funcall let progn if cond] 4 [while save-excursion let* progn if org-cycle-hide-drawers save-excursion org-show-entry progn if while save-excursion progn if org-show-set-visibility save-excursion] 8 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00aee7dfb86>" funcall let progn if] 18 [or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00aee7dfb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 4 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901aecc84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [< if let progn if cond let cond let "#<lambda 0x1a901afac04f2f2c>" funcall let progn if cond let] 4 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901afac04f2f2c>" funcall] 4 [let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall] 4 [if let org-noter--mode-line-text eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00af3b91b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 6 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b75004f2f2c>" funcall let progn] 4 [> and if let org-noter--parse-location-property let "#<lambda 0x1016a00af4f5c386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1a901bb5484f2f2c>" funcall let progn if cond let] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bb5484f2f2c>" funcall] 4 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1016a00af5d3bb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 7 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af5d3bb86>" funcall let progn if cond] 38 [or if let org-noter--parse-location-property let "#<lambda 0x1a901b6cf84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 3 [catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b6cf84f2f2c>"] 4 [window-inside-pixel-edges pdf-misc-size-indication eval redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if] 4 ["#<lambda 0x1016a00af41f2386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let] 7 [cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall catch let let*] 4 [or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00af7df7386>" funcall let progn if cond] 7 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bb4584f2f2c>" funcall let progn] 4 [run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00af5828386>" funcall let progn if cond] 15 [org-noter--relative-position-to-view let cond let "#<lambda 0x1a901b88084f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b88084f2f2c>" funcall] 4 [save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af168d386>" funcall let progn if cond let] 3 [org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901bb7384f2f2c>" funcall let progn if] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901bb7384f2f2c>" funcall let progn if cond] 4 [not and cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall] 7 [org-element-map save-excursion org-noter--show-note-entry let while let cond let* progn progn unwind-protect save-current-buffer let if let progn] 4 [catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af134b386>"] 4 [if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901bbb804f2f2c>" funcall let progn if cond] 4 [mapconcat pdf-info-query pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c55c3a3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if] 4 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af12a3b86>" funcall] 18 [and or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00af55b9386>" funcall let progn if] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901b80284f2f2c>"] 4 [let cond org-noter--relative-position-to-view let cond let "#<lambda 0x1a901bbfc04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [setq let while let let catch let* org-element-map let let progn progn if let org-noter-sync-prev-page-or-chapter let] 2 [eq and cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>" funcall] 4 [cdr let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 11 [if org-element-property vector setq if progn cond let cond let cond let "#<lambda 0x1a901a6a884f2f2c>" funcall let progn] 4 [macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function org-element-map let let progn progn if let org-noter-sync-prev-page-or-chapter let] 2 [if let org--property-global-or-keyword-value let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion] 12 [cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [or let org-noter--doc-file-property let "#<lambda 0x1a901b79b84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af1c1e386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a901b4ae84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901b4ae84f2f2c>" funcall] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00af1bcb386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 4 [let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch let let* org-element-map] 3 [and while cond let save-restriction save-excursion org-get-property-block let org--property-local-values let while catch let save-restriction save-excursion org-entry-get-with-inheritance] 8 [pdf-history-before-change-page-hook run-hooks pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn progn] 4 [let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall] 6 [org-outline-level funcall 1- let progn if org-up-heading-safe while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry let while] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00af2d6cb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 4 [image-mode-window-get cons progn if org-noter-pdf--approx-location-cons run-hook-with-args-until-success or progn unwind-protect save-current-buffer let let org-noter--doc-approx-location let progn progn] 2 ["#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901b69084f2f2c>"] 4 [and if let org-noter--parse-location-property let "#<lambda 0x1016a00afd887b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond] 2 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let "#<lambda 0x1a901b60384f2f2c>" funcall let progn] 4 [progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn progn if let] 32 [or let org-noter--doc-file-property let "#<lambda 0x1016a00afeeb3386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>"] 2 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b55704f2f2c>" funcall let progn if cond] 4 [save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901b55704f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [or let org-noter--doc-file-property let "#<lambda 0x1a901b46784f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [cond cond let "#<lambda 0xe0da7c25520e082>" mapc cond let "#<lambda 0xe0da7c25520e082>" funcall catch let let* org-element-map save-excursion org-noter--show-note-entry let] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00afff6cb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 6 [< if let progn if cond let cond let "#<lambda 0x1a901b5d284f2f2c>" funcall let progn if cond let] 4 [let cond let "#<lambda 0x1a901b5d284f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>"] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a72b84f2f2c>"] 4 [cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch let] 7 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a11184f2f2c>" funcall let] 4 [if let progn if cond let cond let "#<lambda 0x1a901a11184f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 3 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a76f84f2f2c>" funcall] 4 [let "#<lambda 0x7e1ee61ec1c9cdc>" funcall catch let let* org-element-map or let* progn if org-noter--get-properties-end if let cond let*] 4 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bd2f81386>" funcall let progn if] 4 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a54a84f2f2c>" funcall] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901a54a84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [= and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bd1d57386>" funcall let progn] 12 [< or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bdd9f7b86>" funcall let progn if] 6 [let cond let cond let "#<lambda 0x1a901be8984f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901a61c84f2f2c>"] 8 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901a7e284f2f2c>" funcall let] 4 [cond let org--hide-wrapper-toggle org-hide-drawer-toggle progn if let "#<lambda 0x13e3eb0>" funcall if let* if let* while save-excursion let*] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a901bede04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [cond let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond let "#<lambda 0xe0da75d7857fd82>"] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901be1d04f2f2c>" funcall let progn if cond] 4 [not or and cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00bdf939b86>" funcall let] 4 [cond org-noter--relative-position-to-view let cond let "#<lambda 0x1a901bc9f84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901bc9f84f2f2c>" funcall] 4 [cond let cond let* progn progn unwind-protect save-current-buffer let if let progn progn if let org-noter--focus-notes-region] 16 [> or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a901bd4404f2f2c>" funcall] 4 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a901bd4404f2f2c>" funcall let progn if cond] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901bca384f2f2c>"] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a901da0684f2f2c>" funcall let] 4 [and if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch] 4 [if cond let "#<lambda 0x1016a00bd85f9386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>"] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1a901daed84f2f2c>" funcall let progn if cond let] 4 [let cond let cond let "#<lambda 0x1a902ff5884f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [let "#<lambda 0x1016a00b9e71ab86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond] 6 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902f82f04f2f2c>" funcall] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902f20204f2f2c>"] 4 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00b9eb4cb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 3 [org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902c86a84f2f2c>" funcall] 4 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902c86a84f2f2c>"] 4 [progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch] 2 [org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902c8fb04f2f2c>" funcall let progn if] 4 [let cond let "#<lambda 0x1a902c9b384f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>"] 4 [progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bda868b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 3 [and or progn org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902c8a984f2f2c>" funcall] 2 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c9bc84f2f2c>" funcall let progn] 4 [let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or] 10 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902ca3a04f2f2c>" funcall let progn] 6 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a902ca3a04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902ca2104f2f2c>" funcall let progn if] 4 [let cond let "#<lambda 0x1a902c93c04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>"] 4 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00b9d6e8b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 2 [if let progn if cond let cond let "#<lambda 0x1a902fa6184f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 3 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all] 2 [cond let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>"] 6 [cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902cbe904f2f2c>" funcall let progn if cond] 4 [if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00b9d43a386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 3 [let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>"] 4 [member-ignore-case cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902cb6404f2f2c>" funcall let progn if] 1 [progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00b9da1eb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 2 [let "#<lambda 0x1a902f95604f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 5 [let* org-noter-pdf--convert-to-location-cons run-hook-with-args-until-success or setq progn cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00b9bde0b86>" funcall let progn] 10 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902fb4504f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902fb5984f2f2c>" funcall let] 4 [max min let* org-noter--conv-page-percentage-scroll - image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let] 4 [org-element-contents mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall] 6 [let org-noter--parse-location-property let "#<lambda 0x1a902fd2a04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>"] 3 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902fd2a04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [timer-set-idle-time run-with-idle-timer vector setq progn if if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let] 4 [run-hook-with-args-until-success or progn unwind-protect save-current-buffer let let org-noter--doc-approx-location let progn progn if let org-noter-sync-prev-page-or-chapter let while] 2 [progn cond let cond let cond let "#<lambda 0x1a902c05e84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 6 [save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902c05e84f2f2c>" funcall let progn] 4 [cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch let let*] 3 [or let org-noter--doc-file-property let "#<lambda 0x1a902c24f04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 3 [not cond org-element-type let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch] 4 [cl-sort pdf-view-sorted-hotspot-functions pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 2 [pdf-info--normalize-file-or-buffer pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer] 4 [and or if cons progn if org-noter-pdf--approx-location-cons car vector progn if org-noter-pdf--get-current-view run-hook-with-args-until-success or progn unwind-protect] 2 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00b93e08386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 2 [or cond org-noter--compare-location-cons if cond org-noter--compare-locations and cond let cond let cond let "#<lambda 0x1a902f8c984f2f2c>" funcall let] 3 [let "#<lambda 0x1a902f8c984f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [if org-element-property vector setq if progn cond let cond let cond let "#<lambda 0x1a902c0dc84f2f2c>" funcall let progn] 1 [cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902c09784f2f2c>" funcall let] 7 [cond let cond let while catch let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get] 6 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00b9ace7386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 6 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902cc3b84f2f2c>" funcall] 7 [cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms] 2 [function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902ccdd04f2f2c>" funcall let progn] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00b99032b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 2 [symbolp cond org-element-type let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch] 4 [progn buffer-live-p and if progn if org-noter--valid-session if let org-noter--focus-notes-region if let progn progn if let] 4 [cconv-analyze-form cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902ceb604f2f2c>"] 5 [mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let "#<lambda -0x1286631677a8027e>" funcall catch] 6 [if org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1a902c2e504f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 2 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00b8cb7b386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 2 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00b8c7dab86>" funcall let progn if] 2 [or progn org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00b97c4a386>" funcall let progn if cond] 6 [macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let] 3 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902dba304f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [cdr let* org-noter--conv-page-percentage-scroll - image-scroll-up let progn if org-noter-pdf--goto-location run-hook-with-args-until-success progn unwind-protect save-current-buffer let let progn] 4 [macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 3 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902da6e04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 4 [or progn if let org-noter--parse-location-property let "#<lambda 0x1a902da6e04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 4 [let org-noter--doc-file-property let "#<lambda 0x1016a00ba0af1b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>"] 6 [if org-element-property or let org-noter--doc-file-property let "#<lambda 0x1016a00ba3ddf386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 6 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function setq let let* org-element-map let progn progn if] 3 [org-noter--doc-file-property let "#<lambda 0x1a902d6f384f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let "#<lambda 0xe0da75d7857fd82>" mapc] 5 [macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all] 4 [cconv-fv cconv-make-interpreted-closure function let* while save-excursion let* progn if org-cycle-hide-drawers save-excursion org-show-entry if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00ba2664386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 6 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902d47c84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 1 [kill-buffer "#<compiled -0x1c8b5129a6e640df>" pdf-util-munch-file pdf-info-query--transform-response pdf-info-query--parse-response "#<compiled 0x1e0cfafdc724a523>" tq-process-buffer tq-filter "#<compiled -0x72b538c0ca755bb>" accept-process-output pdf-info-query apply pdf-info-renderpage pdf-cache-renderpage pdf-view-create-page pdf-view-display-page] 3 [intern org-element-property or if let org-noter--parse-location-property let "#<lambda 0x1a902d57a04f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc] 4 [keymap-canonicalize redisplay_internal\ \(C\ function\) redisplay progn unwind-protect save-current-buffer let let progn progn if let org-noter--doc-goto-location if let progn] 3 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexp--all-forms macroexp--all-clauses] 1 [or goto-char save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902d6bd84f2f2c>" funcall let progn if] 4 [and or cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00ba3630386>" funcall let progn if] 12 [pdf-info--normalize-file-or-buffer pdf-info-getannots pdf-annot-getannots pdf-annot-hotspot-function "#<compiled 0x1aafeaa33c375ae3>" mapcar pdf-view-apply-hotspot-functions pdf-view-create-page pdf-view-display-page pdf-view-redisplay pdf-view-goto-page if let progn if org-noter-pdf--goto-location] 4 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba4e65386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond] 4 [cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function setq let let* org-element-map let progn progn if let progn if] 1 [org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902cc7204f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 8 [save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion org-noter--show-note-entry] 4 [if save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba7c33b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 4 [cond org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00ba6025b86>" funcall let progn if cond let] 4 [> and if let org-noter--parse-location-property let "#<lambda 0x1a902d80504f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond] 5 [let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba1401b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond] 2 [org-element-property or let org-noter--doc-file-property let "#<lambda 0x1a902dbe804f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond] 4 [save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1016a00ba7152b86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc] 4 [macroexp-macroexpand macroexp--expand-all macroexp--all-forms macroexp--expand-all macroexpand-all cconv-make-interpreted-closure function cons vector setq if progn cond let cond let] 3 [org-flag-region if save-excursion org-flag-heading let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 4 [org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda 0x1a902df4304f2f2c>" funcall let progn if] 3 [progn let* make-org-noter--view-info let progn progn if let progn if org-noter--get-view-info let progn progn if let] 4 [car let or progn if let org-noter--parse-location-property let "#<lambda 0x1a902dd9184f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>"] 6 [cconv-fv cconv-make-interpreted-closure function cons vector setq if progn cond let cond let cond let "#<lambda 0x1a902dd3484f2f2c>" funcall] 3 [org-element-map let let progn progn if let org-noter-sync-prev-page-or-chapter let while let dotimes let while let dotimes] 3 ["#<lambda 0x1016a00ba4692386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let "#<lambda -0x1286631677a8027e>" mapc cond let] 4 [overlay-put let progn if org-flag-region let* if let* cond let org--hide-wrapper-toggle org-hide-drawer-toggle progn if let "#<lambda 0x13e3eb0>"] 4 [if save-excursion org-flag-heading while let* save-excursion if org-show-children progn if while save-excursion progn if org-show-set-visibility save-excursion] 4 [or let org-noter--doc-file-property let "#<lambda 0x1016a00bbdaa0386>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>" mapc cond cond let] 4 [cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv-analyze-form cconv--analyze-function cconv-analyze-form cconv-fv cconv-make-interpreted-closure function org-element-map let progn progn] 5 [org-noter--compare-location-cons if cond org-noter--compare-locations and if cond let "#<lambda 0x1016a00bbdfbcb86>" funcall let progn if cond let "#<lambda -0x1286631677a8027e>"] 2 [or let org-noter--doc-file-property let "#<lambda 0x1a902c78e84f2f2c>" funcall let progn if cond let "#<lambda 0xe0da75d7857fd82>" mapc cond cond let] 4 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0x1016a00bb8112b86>" funcall let progn if cond let] 7 [and cond let or progn if let org-noter--parse-location-property let "#<lambda 0xb4ac17d39bf3dbc>" funcall let progn if cond let] 5 [let save-restriction save-excursion org-entry-get-with-inheritance cond save-restriction save-excursion save-excursion let org-entry-get or let org-noter--doc-file-property let "#<lambda -0x69ed6ef29fac244>" funcall] 4 [Automatic\ GC] 1173)) (25844 3944 671694 561000) nil]
